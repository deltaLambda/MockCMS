@model MockCMS.ViewModels.ManageItemTypesModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ManageItemTypes</title>
</head>
<body>
    <script src="@Url.Content("~/Scripts/jquery-1.6.2.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
    <script src="@Url.Content("~/Scripts/knockout-2.0.0.js")"></script>
    @using (Html.BeginForm()) {
        @Html.ValidationSummary(true)
    
        <fieldset>
            <legend>Manage Item Types</legend>
            <ul data-bind="foreach: itemTypes">
                <li>
                    @Html.LabelFor( model => model.ItemTypes[0].Name)
                    <input type="text" data-bind="value: Name, attr: { name: 'ItemTypes_' + length + '__Name' }" />
                    <p>Properties: </p>
                    <ul data-bind="foreach: Properties">
                        <li>
                            @Html.LabelFor(model => model.ItemTypes[0].Properties[0].Name)
                            <input type="text" data-bind="value: Name" />
                            <select data-bind="value: PropertyType, attr: { name: 'ItemTypes_' + Index + '__Properties_' + length + '__Name' }">
                                @foreach (var itemPropertyType in Model.ItemPropertyTypes)
                                {
                                    <option value="@itemPropertyType.GetId()">@itemPropertyType.Name</option>        
                            }
                            </select>
                        </li>
                    </ul>
                </li>
            </ul>
            <p>
                <button data-bind="click: createItem">Create Item Type</button>
                <input type="submit" value="Save" />
            </p>
        </fieldset>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    <script>        
        var ManageItemTypesModel = function() {
            this.itemTypes = ko.observableArray();
            this.createItem = function () {
                this.itemTypes.push({ Name: "", Properties: [{ Name: "", PropertyType: 0, Index: this.itemTypes().length }]});
            };
        };
        ko.applyBindings(new ManageItemTypesModel());
    </script>
</body>
</html>
